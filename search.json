[{"path":"https://michael-franke.github.io/faintr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 faintr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://michael-franke.github.io/faintr/articles/faintr_basics.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Comparing groups of factor levels with faintr","text":"faintr (FActorINTerpreteR) package provides convenience functions evaluating Bayesian regression models factorial designs, fitted brms package (Bürkner, 2017). faintr package allows extraction many meaningful comparisons irrespective encoding scheme initially used model. package provides following convenience functions: get_cell_definitions returns information factors encoding model. extract_cell_draws provides posterior draws metadata one subset factorial design cells. compare_groups allows comparison two subsets factorial design cells. Currently, package support multivariate models models use families categorical, dirichlet, multinomial, logistic_normal. Furthermore, models must include special effect terms mo(), mi(), (), cs() fixed effects. Also note faintr currently support models intercept population-level parameter (class b), case using 0 + Intercept syntax brm function call.","code":""},{"path":"https://michael-franke.github.io/faintr/articles/faintr_basics.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Comparing groups of factor levels with faintr","text":"Install faintr package devtools GitHub:","code":"if (!require(devtools)) {   install.packages('devtools') }  devtools::install_github('michael-franke/faintr', build_vignettes = TRUE)"},{"path":"https://michael-franke.github.io/faintr/articles/faintr_basics.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Comparing groups of factor levels with faintr","text":"use following packages vignette:","code":"# data wrangling library(dplyr) library(tidyr) library(posterior)  # pipe operator library(magrittr)  # fitting Bayesian regression models library(brms)  # evaluating Bayesian regression models  library(faintr)  # plotting library(ggplot2)  # computing credible intervals library(HDInterval)"},{"path":"https://michael-franke.github.io/faintr/articles/faintr_basics.html","id":"example-with-treatment-coding-dummy-coding","dir":"Articles","previous_headings":"","what":"Example with treatment coding (dummy coding)","title":"Comparing groups of factor levels with faintr","text":"running data set vignette borrowed experiment Winter Grawunder (2012) included faintr package. data set stores measurements voice pitch male female Korean speakers polite informal social contexts. study followed \\(2 \\times 2\\) factorial design factor gender (M F) factor context (inf pol), yielding total four possible factor level combinations (also called design cells). See ?politeness information data set. Let’s peek first couple rows: cell means data set : Bayesian regression model data set, fitted brms, might look follows. model regresses voice pitch factors gender context (interaction) includes -participant -sentence random intercepts. Let’s look estimated coefficients: names model coefficients (lack thereof), can infer model must dummy-coded factors, default encoding scheme brm function. estimated intercept dummy coding constitutes reference level, female speakers (gender:F) informal contexts (context:inf). remaining factor level combinations can retrieved adding corresponding slope coefficients estimated intercept.","code":"head(politeness) ## # A tibble: 6 × 5 ##   subject gender sentence context pitch ##   <chr>   <chr>  <chr>    <chr>   <dbl> ## 1 F1      F      S1       pol      213. ## 2 F1      F      S1       inf      204. ## 3 F1      F      S2       pol      285. ## 4 F1      F      S2       inf      260. ## 5 F1      F      S3       pol      204. ## 6 F1      F      S3       inf      287. politeness %>%    group_by(gender, context) %>%    summarize(mean_pitch = mean(pitch)) ## # A tibble: 4 × 3 ## # Groups:   gender [2] ##   gender context mean_pitch ##   <chr>  <chr>        <dbl> ## 1 F      inf           261. ## 2 F      pol           233. ## 3 M      inf           144. ## 4 M      pol           133. fit_brms_politeness <- brm(formula = pitch ~ gender * context + (1 | subject + sentence),                            data = politeness,                            chains = 2,                            iter = 500,                            control = list(adapt_delta = 0.99),                            cores = 2,                            seed = 1234 # for reproducible results                            ) fixef(fit_brms_politeness) ##                      Estimate Est.Error        Q2.5     Q97.5 ## Intercept           260.97117 24.509305  214.805833 305.65970 ## genderM            -116.33043 38.491076 -191.939831 -45.90558 ## contextpol          -27.23192  7.717121  -43.091737 -11.27604 ## genderM:contextpol   15.10265 10.869829   -4.903683  38.15758"},{"path":"https://michael-franke.github.io/faintr/articles/faintr_basics.html","id":"get_cell_definitions","dir":"Articles","previous_headings":"Example with treatment coding (dummy coding)","what":"get_cell_definitions","title":"Comparing groups of factor levels with faintr","text":"can use function get_cell_definitions faintr package obtain information factors internal encoding model: Generally, can retrieve estimate design cell taking dot product row interest design matrix estimated coefficients. instance, estimated mean cell data male speakers informal contexts given \\[\\begin{equation}      \\mu_{\\text{(M, inf)}} =    \\begin{bmatrix}     1 & 1 & 0 & 0   \\end{bmatrix}    \\begin{bmatrix}     260.97117 \\\\       -116.33043 \\\\       -27.23192 \\\\       15.10265 \\\\   \\end{bmatrix}    \\approx    144.64    \\end{equation}\\]","code":"get_cell_definitions(fit_brms_politeness) ## # A tibble: 4 × 7 ##    cell gender context Intercept genderM contextpol `genderM:contextpol` ##   <int> <chr>  <chr>       <dbl>   <dbl>      <dbl>                <dbl> ## 1     1 F      pol             1       0          1                    0 ## 2     2 F      inf             1       0          0                    0 ## 3     3 M      pol             1       1          1                    1 ## 4     4 M      inf             1       1          0                    0"},{"path":"https://michael-franke.github.io/faintr/articles/faintr_basics.html","id":"extract_cell_draws","dir":"Articles","previous_headings":"Example with treatment coding (dummy coding)","what":"extract_cell_draws","title":"Comparing groups of factor levels with faintr","text":"Manually adding model coefficients can get tedious error-prone quickly, especially models factors, levels within factors complicated encoding schemes. function extract_cell_draws faintr package, can extract posterior samples using simple filter-syntax. extract posterior draws , say, male speakers informal contexts, : can also use negations disjunctions subset design cells: extract posterior draws part factors used model, simply omit unwanted factors group specification. interested voice pitch polite contexts, averaged male female speakers. Let’s also set informative column name: Furthermore, can extract posterior draws grand mean, .e., mean design cells together. can specifying group level function call: can use output extract_cell_draws inspecting comparing posterior draws visually:  conjunction summarise function dplyr package (Wickham et al., 2022) obtain useful summary statistics, means credible intervals: extract_cell_draws returns draws draws_df format provided posterior package (Bürkner et al., 2022), can easily access many convenience functions offers. subset draws first ten iterations first chain using subset_draws:","code":"extract_cell_draws(fit_brms_politeness, gender == 'M' & context == 'inf') ## # A draws_df: 250 iterations, 2 chains, and 1 variables ##    draws ## 1    124 ## 2    150 ## 3    140 ## 4    161 ## 5    147 ## 6    129 ## 7    160 ## 8    150 ## 9    161 ## 10   158 ## # ... with 490 more draws ## # ... hidden reserved variables {'.chain', '.iteration', '.draw'} extract_cell_draws(fit_brms_politeness, gender != 'F' | context == 'inf') ## # A draws_df: 250 iterations, 2 chains, and 1 variables ##    draws ## 1    167 ## 2    192 ## 3    167 ## 4    178 ## 5    184 ## 6    171 ## 7    193 ## 8    182 ## 9    180 ## 10   192 ## # ... with 490 more draws ## # ... hidden reserved variables {'.chain', '.iteration', '.draw'} extract_cell_draws(fit_brms_politeness, context == 'pol', colname = 'context:pol') ## # A draws_df: 250 iterations, 2 chains, and 1 variables ##    context:pol ## 1          180 ## 2          202 ## 3          166 ## 4          172 ## 5          190 ## 6          181 ## 7          191 ## 8          182 ## 9          176 ## 10         193 ## # ... with 490 more draws ## # ... hidden reserved variables {'.chain', '.iteration', '.draw'} extract_cell_draws(fit_brms_politeness, colname = 'grand_mean') ## # A draws_df: 250 iterations, 2 chains, and 1 variables ##    grand_mean ## 1         188 ## 2         210 ## 3         176 ## 4         182 ## 5         200 ## 6         188 ## 7         202 ## 8         196 ## 9         187 ## 10        203 ## # ... with 490 more draws ## # ... hidden reserved variables {'.chain', '.iteration', '.draw'} draws_gender <- bind_draws(extract_cell_draws(fit_brms_politeness, gender == 'M', colname = 'male'),                            extract_cell_draws(fit_brms_politeness, gender == 'F', colname = 'female'))  draws_gender %>%    pivot_longer(cols = variables(.), names_to = 'group', values_to = 'draws') %>%    ggplot(aes(x = draws, color = group, fill = group)) +   geom_density(alpha = .4) extract_cell_draws(fit_brms_politeness, gender == 'M' & context == 'pol') %>%   summarise(     `|95%` = hdi(draws)[1],      mean   = mean(draws),     `95%|` = hdi(draws)[2]   ) ## # A tibble: 1 × 3 ##   `|95%`  mean `95%|` ##    <dbl> <dbl>  <dbl> ## 1   86.6  133.   185. extract_cell_draws(fit_brms_politeness, gender == 'M' & context == 'pol') %>%   subset_draws(variable = 'draws', chain = 1, iteration = 1:10) %>%    glimpse() ## Rows: 10 ## Columns: 4 ## $ draws      <dbl> 109.2502, 136.5876, 131.3179, 149.1211, 131.1111, 122.0383,… ## $ .chain     <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ## $ .iteration <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ## $ .draw      <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10"},{"path":"https://michael-franke.github.io/faintr/articles/faintr_basics.html","id":"compare_groups","dir":"Articles","previous_headings":"Example with treatment coding (dummy coding)","what":"compare_groups","title":"Comparing groups of factor levels with faintr","text":"compare different (groups ) cells , faintr package provides function compare_groups. function returns mean difference ‘higher’ ‘lower’ group specification, credible interval (defaults 95%), well posterior probability odds mean estimate ‘higher’ group higher ‘lower’ group. Although fit regression model uses particular reference cell dummy coding (female speakers informal contexts), contrasts relevance can retrieved posterior samples. example, want compare two cells diagonally, say, female speakers polite contexts male speakers informal contexts, can like : , can use negations disjunctions group specifications. Let us also lower mass highest density interval (HDI) 0.89 comparison: want compare male female speakers (, irrespective contexts), simply omit context variable group specifications: can also compare effect female speakers grand mean, retrieve information normally obtained sum coding. , leave one two group specifications function call (‘lower’ group):","code":"compare_groups(   fit  = fit_brms_politeness,   higher = gender == 'F' & context == 'pol',   lower  = gender == 'M' & context == 'inf' ) ## Outcome of comparing groups:  ##  * higher:  gender == \"F\" & context == \"pol\"  ##  * lower:   gender == \"M\" & context == \"inf\"  ## Mean 'higher - lower':  89.1  ## 95% HDI:  [ 16.55 ; 163.4 ] ## P('higher - lower' > 0):  0.994  ## Posterior odds:  165.7 compare_groups(  fit  = fit_brms_politeness,   higher = gender == 'F' & context != 'pol',  lower  = gender != 'F' | context == 'pol',  hdi    = 0.89 ) ## Outcome of comparing groups:  ##  * higher:  gender == \"F\" & context != \"pol\"  ##  * lower:   gender != \"F\" | context == \"pol\"  ## Mean 'higher - lower':  90.67  ## 89% HDI:  [ 49.23 ; 124.3 ] ## P('higher - lower' > 0):  0.996  ## Posterior odds:  249 compare_groups(  fit  = fit_brms_politeness,   higher = gender == 'M',  lower  = gender == 'F' ) ## Outcome of comparing groups:  ##  * higher:  gender == \"M\"  ##  * lower:   gender == \"F\"  ## Mean 'higher - lower':  -108.8  ## 95% HDI:  [ -177.4 ; -32.96 ] ## P('higher - lower' > 0):  0.004  ## Posterior odds:  0.004016 compare_groups(   fit  = fit_brms_politeness,   higher = gender == 'F' ) ## Outcome of comparing groups:  ##  * higher:  gender == \"F\"  ##  * lower:   grand mean  ## Mean 'higher - lower':  54.39  ## 95% HDI:  [ 16.48 ; 88.7 ] ## P('higher - lower' > 0):  0.996  ## Posterior odds:  249"},{"path":"https://michael-franke.github.io/faintr/articles/faintr_basics.html","id":"example-with-sum-coding","dir":"Articles","previous_headings":"","what":"Example with sum coding","title":"Comparing groups of factor levels with faintr","text":"faintr package also works models different contrast coding schemes. Notice long use uninformative (improper) priors coefficients, results estimators various design cells (similar, given natural variation sampling) across coding schemes. see , model sum-coded predictor variables, else equal case . call get_cell_definitions shows predictor variables encoded newly fitted model: can seen output, factor gender now coded 1 male speakers, -1 female speakers. Likewise, factor context coded 1 polite contexts, -1 informal contexts. Importantly, estimated coefficients sum-coded model reflect difference reference level (treatment coding), difference grand mean (.e., mean design cells). summary statistics estimated posterior male speakers polite contexts model sum coding: nearly identical (modulo sampling variation) results obtained (repeated ) previous model treatment coding: emphasis: fit model prior structure model coefficients uniform/uninformative priors, guaranteed results models different contrast coding schemes. illustration, consider sum-coded model skeptical prior coefficients gender:M context:pol: priors chosen translate prior belief likely difference given factor level grand mean. Since data set relatively small, priors strong influence resulting posterior estimates: expected, posterior estimate male speakers polite contexts strongly deviates estimate factor level dummy-coded model . fact, estimate now much closer grand mean (makes sense given way informed model).","code":"# make predictors 'factors' because that's required for contrast coding #   also: change order to match coding assumed in the main text politeness_sum <- politeness %>%    mutate(     gender = factor(gender, levels = c('M', 'F')),     context = factor(context, levels = c('pol', 'inf'))   )  # apply 'sum' contrasts contrasts(politeness_sum$gender) <- contr.sum(2) contrasts(politeness_sum$context) <- contr.sum(2)  # add intelligible names to the new contrast coding colnames(contrasts(politeness_sum$gender)) <- ':M' colnames(contrasts(politeness_sum$context)) <- ':pol'  # run brm as usual fit_brms_politeness_sum <- brm(formula = pitch ~ gender * context + (1 | subject + sentence),                                data = politeness_sum,                                chains = 2,                                iter = 500,                                control = list(adapt_delta = 0.99),                                cores = 2,                                seed = 1234                                ) get_cell_definitions(fit_brms_politeness_sum) ## # A tibble: 4 × 7 ##    cell gender context Intercept `gender:M` `context:pol` `gender:M:context:pol` ##   <int> <fct>  <fct>       <dbl>      <dbl>         <dbl>                  <dbl> ## 1     1 F      pol             1         -1             1                     -1 ## 2     2 F      inf             1         -1            -1                      1 ## 3     3 M      pol             1          1             1                      1 ## 4     4 M      inf             1          1            -1                     -1 extract_cell_draws(fit_brms_politeness_sum, gender == 'M' & context == 'pol') %>%   summarise(     `|95%` = hdi(draws)[1],      mean   = mean(draws),     `95%|` = hdi(draws)[2]   ) ## # A tibble: 1 × 3 ##   `|95%`  mean `95%|` ##    <dbl> <dbl>  <dbl> ## 1   87.6  136.   190. extract_cell_draws(fit_brms_politeness, gender == 'M' & context == 'pol') %>%   summarise(     `|95%` = hdi(draws)[1],      mean   = mean(draws),     `95%|` = hdi(draws)[2]   ) ## # A tibble: 1 × 3 ##   `|95%`  mean `95%|` ##    <dbl> <dbl>  <dbl> ## 1   86.6  133.   185. # skeptical prior on fixed effects priors <- c(   prior(normal(0, 10), coef = `gender:M`),   prior(normal(0, 10), coef = `context:pol`) )  # run brm as usual fit_brms_politeness_sum_prior <- brm(formula = pitch ~ gender * context + (1 | subject + sentence),                                      data = politeness_sum,                                      prior = priors,                                      chains = 2,                                      iter = 500,                                      control = list(adapt_delta = 0.99),                                      cores = 2,                                      seed = 1234                                      ) extract_cell_draws(fit_brms_politeness_sum_prior, gender == 'M' & context == 'pol') %>%   summarise(     `|95%` = HDInterval::hdi(draws)[1],      mean   = mean(draws),     `95%|` = HDInterval::hdi(draws)[2]   ) ## # A tibble: 1 × 3 ##   `|95%`  mean `95%|` ##    <dbl> <dbl>  <dbl> ## 1   127.  184.   249. extract_cell_draws(fit_brms_politeness) %>%   summarise(     `|95%` = hdi(draws)[1],      mean   = mean(draws),     `95%|` = hdi(draws)[2]   ) ## # A tibble: 1 × 3 ##   `|95%`  mean `95%|` ##    <dbl> <dbl>  <dbl> ## 1   163.  193.   226."},{"path":"https://michael-franke.github.io/faintr/articles/faintr_basics.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Comparing groups of factor levels with faintr","text":"Bürkner P.-C. (2017). brms: R Package Bayesian Multilevel Models Using Stan. Journal Statistical Software, 80(1), 1-28. https://doi.org/10.18637/jss.v080.i01. Bürkner P.-C., Gabry J., Kay M., Vehtari . (2022). posterior: Tools Working Posterior Distributions. https://mc-stan.org/posterior/. Wickham H., François R., Henry L., Müller K. (2022). dplyr: Grammar Data Manipulation. https://CRAN.R-project.org/package=dplyr. Winter B., Grawunder S. (2012). Phonetic Profile Korean Formality. Journal Phonetics, 40, 808-15.","code":""},{"path":"https://michael-franke.github.io/faintr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Özge Özenoglu. Author. Noa Kallioinen. Author. Michael Franke. Author, maintainer.","code":""},{"path":"https://michael-franke.github.io/faintr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Özenoglu Ö, Kallioinen N, Franke M (2023). faintr: Factor Interpreter Bayesian Regression Models. https://github.com/michael-franke/faintr, https://michael-franke.github.io/faintr/.","code":"@Manual{,   title = {faintr: Factor Interpreter for Bayesian Regression Models},   author = {Özge Özenoglu and Noa Kallioinen and Michael Franke},   year = {2023},   note = {https://github.com/michael-franke/faintr, https://michael-franke.github.io/faintr/}, }"},{"path":[]},{"path":"https://michael-franke.github.io/faintr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Factor Interpreter for Bayesian Regression Models","text":"faintr (FActorINTerpreteR) package provides convenience functions interpreting brms model fits data factorial designs. allows extraction comparison posterior draws given design cell, irrespective encoding scheme used model. Currently, faintr provides following functions: get_cell_definitions returns information predictor variables encoded model. extract_cell_draws returns posterior draws additional metadata one subset design cells. compare_groups returns summary statistics comparing two subsets design cells.","code":""},{"path":"https://michael-franke.github.io/faintr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Factor Interpreter for Bayesian Regression Models","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"michael-franke/faintr\")"},{"path":"https://michael-franke.github.io/faintr/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Factor Interpreter for Bayesian Regression Models","text":"section, shortly introduce use package. detailed overview, please refer vignette. use preprocessed version R’s built-Titanic data set: data set contains following variables: Class: Passenger class Sex: Sex passenger Age: Age group passenger Count: Count passengers survived Total: Total number passengers , regress counts passengers survived function class, sex, age group using Binomial logistic regression model fitted brms: obtain information factors encoding scheme used model, can use get_cell_definitions: output reveals used dummy coding factors Class, Sex Age, 1st, Female, Adult reference levels, respectively. obtain posterior draws specific design cell, can use extract_cell_draws. instance, draws women second class can extracted like : Parameter colname allows changing default column name output, facilitates post-processing cell draws, e.g., plotting summary statistics. , extract draws level Class (averaged Sex Age) visualize results:  Finally, can compare two subsets design cells compare_groups. , compare odds surviving female passengers first class male passengers first class: one two group specifications left , compare grand mean:","code":"#> # A tibble: 16 x 5 #>    Class Sex    Age   Count Total #>    <chr> <chr>  <chr> <dbl> <dbl> #>  1 1st   Male   Child     5     5 #>  2 2nd   Male   Child    11    11 #>  3 3rd   Male   Child    13    48 #>  4 Crew  Male   Child     0     0 #>  5 1st   Female Child     1     1 #>  6 2nd   Female Child    13    13 #>  7 3rd   Female Child    14    31 #>  8 Crew  Female Child     0     0 #>  9 1st   Male   Adult    57   175 #> 10 2nd   Male   Adult    14   168 #> 11 3rd   Male   Adult    75   462 #> 12 Crew  Male   Adult   192   862 #> 13 1st   Female Adult   140   144 #> 14 2nd   Female Adult    80    93 #> 15 3rd   Female Adult    76   165 #> 16 Crew  Female Adult    20    23 fit <- brm(Count | trials(Total) ~ Class + Sex + Age,              data = data,             family = binomial(link = \"logit\"),            seed = 123) summary(fit) #>  Family: binomial  #>   Links: mu = logit  #> Formula: Count | trials(Total) ~ Class + Sex + Age  #>    Data: data (Number of observations: 16)  #>   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 4000 #>  #> Population-Level Effects:  #>           Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept     2.06      0.17     1.73     2.40 1.00     2567     2451 #> Class2nd     -1.03      0.20    -1.42    -0.64 1.00     2587     2868 #> Class3rd     -1.79      0.17    -2.13    -1.45 1.00     2522     2357 #> ClassCrew    -0.86      0.16    -1.16    -0.56 1.00     2541     2651 #> SexMale      -2.43      0.14    -2.71    -2.16 1.00     3094     2611 #> AgeChild      1.07      0.25     0.57     1.56 1.00     2086     2332 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1). get_cell_definitions(fit) #> # A tibble: 16 x 10 #>     cell Class Sex    Age   Intercept Class2nd Class3rd ClassCrew SexMale #>    <int> <chr> <chr>  <chr>     <dbl>    <dbl>    <dbl>     <dbl>   <dbl> #>  1     1 1st   Male   Child         1        0        0         0       1 #>  2     2 2nd   Male   Child         1        1        0         0       1 #>  3     3 3rd   Male   Child         1        0        1         0       1 #>  4     4 Crew  Male   Child         1        0        0         1       1 #>  5     5 1st   Female Child         1        0        0         0       0 #>  6     6 2nd   Female Child         1        1        0         0       0 #>  7     7 3rd   Female Child         1        0        1         0       0 #>  8     8 Crew  Female Child         1        0        0         1       0 #>  9     9 1st   Male   Adult         1        0        0         0       1 #> 10    10 2nd   Male   Adult         1        1        0         0       1 #> 11    11 3rd   Male   Adult         1        0        1         0       1 #> 12    12 Crew  Male   Adult         1        0        0         1       1 #> 13    13 1st   Female Adult         1        0        0         0       0 #> 14    14 2nd   Female Adult         1        1        0         0       0 #> 15    15 3rd   Female Adult         1        0        1         0       0 #> 16    16 Crew  Female Adult         1        0        0         1       0 #> # ... with 1 more variable: AgeChild <dbl> extract_cell_draws(fit, Sex == \"Female\" & Class == \"2nd\" & Age == \"Adult\") #> # A draws_df: 1000 iterations, 4 chains, and 1 variables #>    draws #> 1   0.92 #> 2   0.79 #> 3   1.15 #> 4   0.96 #> 5   0.94 #> 6   1.14 #> 7   1.30 #> 8   0.99 #> 9   0.79 #> 10  1.38 #> # ... with 3990 more draws #> # ... hidden reserved variables {'.chain', '.iteration', '.draw'} draws_1st  <- extract_cell_draws(fit, Class == \"1st\", colname = \"1st\") draws_2nd  <- extract_cell_draws(fit, Class == \"2nd\", colname = \"2nd\") draws_3rd  <- extract_cell_draws(fit, Class == \"3rd\", colname = \"3rd\") draws_crew <- extract_cell_draws(fit, Class == \"Crew\", colname = \"Crew\")  draws_class <- posterior::bind_draws(draws_1st, draws_2nd, draws_3rd, draws_crew) %>%    pivot_longer(cols = posterior::variables(.), names_to = \"class\", values_to = \"value\")  draws_class %>%    ggplot(aes(x = value, color = class, fill = class)) +   geom_density(alpha = 0.4) compare_groups(fit,                 Sex == \"Female\" & Class == \"1st\",                Sex == \"Male\" & Class != \"1st\"                ) #> Outcome of comparing groups:  #>  * higher:  Sex == \"Female\" & Class == \"1st\"  #>  * lower:   Sex == \"Male\" & Class != \"1st\"  #> Mean 'higher - lower':  3.66  #> 95% HDI:  [ 3.246 ; 4.045 ] #> P('higher - lower' > 0):  1  #> Posterior odds:  Inf compare_groups(fit,                 Class == \"Crew\"                ) #> Outcome of comparing groups:  #>  * higher:  Class == \"Crew\"  #>  * lower:   grand mean  #> Mean 'higher - lower':  0.05887  #> 95% HDI:  [ -0.1276 ; 0.2246 ] #> P('higher - lower' > 0):  0.7482  #> Posterior odds:  2.972"},{"path":"https://michael-franke.github.io/faintr/reference/AT.html","id":null,"dir":"Reference","previous_headings":"","what":"Adams' Thesis data — AT","title":"Adams' Thesis data — AT","text":"Data replication Douven Verbrugge (2010) investigating relationship acceptability ratings conditional sentences conditional probabilities (variable rating) across three different types conditionals (inductive, abductive, deductive).","code":""},{"path":"https://michael-franke.github.io/faintr/reference/AT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adams' Thesis data — AT","text":"","code":"AT"},{"path":"https://michael-franke.github.io/faintr/reference/AT.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Adams' Thesis data — AT","text":"data frame 4,590 rows 5 variables: submission_id unique identifier participant. item_nr identifier context-statement pair presented participant. rating kind rating participant given. cond_type type conditional statement. response measured acceptability rating 7-point Likert scale.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/AT.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Adams' Thesis data — AT","text":"Douven, ., Verbrugge, S. (2010). Adams Family. Cognition, 117, 302-18. https://doi.org/10.1016/j.cognition.2010.08.015.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/AT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adams' Thesis data — AT","text":"","code":"if (FALSE) { # fit an ordinal model using 'brms' # regress response as a function of rating and conditional type (with interaction) fit <- brms::brm(response ~ rating * cond_type,                  data = AT,                  family = cumulative(\"logit\"))  # check encoding scheme used in the model get_cell_definitions(fit)  # get draws for acceptability averaged over the type of conditional extract_cell_draws(fit, rating == \"acceptability\")  # compare main effects of rating compare_groups(fit, rating == \"acceptability\", rating == \"cond_probability\") }"},{"path":"https://michael-franke.github.io/faintr/reference/MC.html","id":null,"dir":"Reference","previous_headings":"","what":"Mental Chronometry data — MC","title":"Mental Chronometry data — MC","text":"Data experiment investigating differences reaction times across three tasks increasing complexity. Participants reacted square circle (variable shape) appearing screen pressing space bar whenever saw shape (block reaction). pressing space bar whenever saw specific shape (block goNoGo). pressing key saw one shapes different key saw one (block discrimination).","code":""},{"path":"https://michael-franke.github.io/faintr/reference/MC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mental Chronometry data — MC","text":"","code":"MC"},{"path":"https://michael-franke.github.io/faintr/reference/MC.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mental Chronometry data — MC","text":"data frame 2,404 rows 4 variables: submission_id unique identifier participant. shape shape presented screen. block task react shape. RT measured reaction time milliseconds.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/MC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mental Chronometry data — MC","text":"","code":"if (FALSE) { # fit a linear model using 'brms' # regress reaction time as a function of the block fit <- brms::brm(RT ~ block, data = MC)  # check encoding scheme used in the model get_cell_definitions(fit)  # get draws for the reaction block extract_cell_draws(fit, block == \"reaction\")  # compare the goNoGo block with the reaction block compare_groups(fit, block == \"goNoGo\", block == \"reaction\") }"},{"path":"https://michael-franke.github.io/faintr/reference/compare_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two subsets of factorial design cells — compare_groups","title":"Compare two subsets of factorial design cells — compare_groups","text":"Convenience function comparing two subsets factorial design cells. takes brms model fit, two group specifications (two subsets design cells), probability mass within highest density interval difference groups. outputs posterior mean 'higher' minus 'lower' group, credible interval mean difference, well posterior probability odds mean estimate 'higher' group higher 'lower' group. comparison one group grand mean can obtained leaving one two group specifications function call.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/compare_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two subsets of factorial design cells — compare_groups","text":"","code":"compare_groups(   fit,   higher = NULL,   lower = NULL,   hdi = 0.95,   include_bf = FALSE )"},{"path":"https://michael-franke.github.io/faintr/reference/compare_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two subsets of factorial design cells — compare_groups","text":"fit object class brmsfit. higher expression specifying 'higher' group filter draws . lower expression specifying 'lower' group filter draws . hdi single value (0, 1) defining probability mass within highest density interval; defaults 0.95. include_bf Boolean flag indicating whether Bayes Factors approximated (required additional sampling); defaults FALSE.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/compare_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two subsets of factorial design cells — compare_groups","text":"object class 'faintCompare' containing summary statistics comparison.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/compare_groups.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compare two subsets of factorial design cells — compare_groups","text":"faintr package currently support multivariate models models use families categorical, dirichlet, multinomial, logistic_normal. Furthermore, models must include special effect terms mo(), mi(), (), cs() fixed effects. Also note faintr currently support models intercept population-level parameter (class b), case using 0 + Intercept syntax brm function call.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/compare_groups.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compare two subsets of factorial design cells — compare_groups","text":"Bürkner, P.-C. (2017). brms: R Package Bayesian Multilevel Models Using Stan. Journal Statistical Software, 80(1), 1-28. doi:10.18637/jss.v080.i01","code":""},{"path":"https://michael-franke.github.io/faintr/reference/compare_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two subsets of factorial design cells — compare_groups","text":"","code":"if (FALSE) { # fit a linear mixed effects model # regressing voice pitch against gender and context and including random effects fit <- brms::brm(formula = pitch ~ gender * context + (1 | subject + sentence),                  data = politeness)  # compare female speakers in informal contexts against male speakers in polite contexts compare_groups(  fit  = fit,  higher = gender == \"F\" & context == \"inf\",  lower  = gender == \"M\" & context == \"pol\" )  # compare informal contexts against polite contexts, averaged over gender compare_groups(  fit  = fit,  higher = context == \"inf\",  lower  = context == \"pol\" )  # compare female speakers against the grand mean compare_groups(  fit  = fit,  higher = gender == \"F\",  hdi = 0.8 ) }"},{"path":"https://michael-franke.github.io/faintr/reference/extract_cell_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract posterior draws for one subset of factorial design cells — extract_cell_draws","title":"Extract posterior draws for one subset of factorial design cells — extract_cell_draws","text":"function takes input brms model fit factorial design group specification (one subset design cells) returns posterior draws group. group specified, returned draws grand means.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/extract_cell_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract posterior draws for one subset of factorial design cells — extract_cell_draws","text":"","code":"extract_cell_draws(fit, group = NULL, colname = \"draws\")"},{"path":"https://michael-franke.github.io/faintr/reference/extract_cell_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract posterior draws for one subset of factorial design cells — extract_cell_draws","text":"fit object class brmsfit. group expression specifying group filter draws . colname string specifying column name returned data frame; defaults 'draws'.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/extract_cell_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract posterior draws for one subset of factorial design cells — extract_cell_draws","text":"draws_df object containing posterior draws specified group, well additional metadata.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/extract_cell_draws.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract posterior draws for one subset of factorial design cells — extract_cell_draws","text":"faintr package currently support multivariate models models use families categorical, dirichlet, multinomial, logistic_normal. Furthermore, models must include special effect terms mo(), mi(), (), cs() fixed effects. Also note faintr currently support models intercept population-level parameter (class b), case using 0 + Intercept syntax brm function call.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/extract_cell_draws.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract posterior draws for one subset of factorial design cells — extract_cell_draws","text":"Bürkner, P.-C. (2017). brms: R Package Bayesian Multilevel Models Using Stan. Journal Statistical Software, 80(1), 1-28. doi:10.18637/jss.v080.i01","code":""},{"path":"https://michael-franke.github.io/faintr/reference/extract_cell_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract posterior draws for one subset of factorial design cells — extract_cell_draws","text":"","code":"if (FALSE) { # fit a linear mixed effects model # regressing voice pitch against gender and context and including random effects fit <- brms::brm(formula = pitch ~ gender * context + (1 | subject + sentence),                  data = politeness)  # extract draws for female speakers in informal contexts extract_cell_draws(fit, gender == \"F\" & context == \"inf\")  # extract draws for male speakers or informal contexts extract_cell_draws(fit, gender == \"M\" | context == \"inf\")  # averaged over gender, extract draws for all but polite contexts extract_cell_draws(fit, context != \"pol\")  # extract posterior draws averaged over all factors (grand mean) extract_cell_draws(fit) }"},{"path":"https://michael-franke.github.io/faintr/reference/faintr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Factor Interpreter for Bayesian Regression Models — faintr-package","title":"Factor Interpreter for Bayesian Regression Models — faintr-package","text":"faintr (FActorINTerpreteR) package provides convenience functions evaluating Bayesian regression models factorial designs, fitted brms package. faintr package allows extraction many meaningful comparisons irrespective encoding scheme initially used model.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/faintr-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Factor Interpreter for Bayesian Regression Models — faintr-package","text":"package provides following functions: get_cell_definitions returns information factors internal encoding scheme used regression model. extracting minimal design matrix model. extract_cell_draws uses cell definitions returned get_cell_definitions extract posterior draws based user-defined subset factorial design cells. subset passed, function returns draws grand mean. compare_groups calls extract_cell_draws two subsets cells returns summary statistics group comparison, mean difference credible interval. information use faintr, see vignette(\"faintr_basics\").","code":""},{"path":"https://michael-franke.github.io/faintr/reference/faintr-package.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Factor Interpreter for Bayesian Regression Models — faintr-package","text":"faintr package currently support multivariate models models use families categorical, dirichlet, multinomial, logistic_normal. Furthermore, models must include special effect terms mo(), mi(), (), cs() fixed effects. Also note faintr currently support models intercept population-level parameter (class b), case using 0 + Intercept syntax brm function call.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/faintr-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Factor Interpreter for Bayesian Regression Models — faintr-package","text":"Bürkner, P.-C. (2017). brms: R Package Bayesian Multilevel Models Using Stan. Journal Statistical Software, 80(1), 1-28. doi:10.18637/jss.v080.i01","code":""},{"path":[]},{"path":"https://michael-franke.github.io/faintr/reference/get_cell_definitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain information about factors in regression models — get_cell_definitions","title":"Obtain information about factors in regression models — get_cell_definitions","text":"function takes brms model fit factorial design returns design cells along encoding regression model.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/get_cell_definitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain information about factors in regression models — get_cell_definitions","text":"","code":"get_cell_definitions(fit)"},{"path":"https://michael-franke.github.io/faintr/reference/get_cell_definitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain information about factors in regression models — get_cell_definitions","text":"fit object class brmsfit.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/get_cell_definitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain information about factors in regression models — get_cell_definitions","text":"tibble containing minimal design matrix.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/get_cell_definitions.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Obtain information about factors in regression models — get_cell_definitions","text":"faintr package currently support multivariate models models use families categorical, dirichlet, multinomial, logistic_normal. Furthermore, models must include special effect terms mo(), mi(), (), cs() fixed effects. Also note faintr currently support models intercept population-level parameter (class b), case using 0 + Intercept syntax brm function call.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/get_cell_definitions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Obtain information about factors in regression models — get_cell_definitions","text":"Bürkner, P.-C. (2017). brms: R Package Bayesian Multilevel Models Using Stan. Journal Statistical Software, 80(1), 1-28. doi:10.18637/jss.v080.i01","code":""},{"path":"https://michael-franke.github.io/faintr/reference/get_cell_definitions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain information about factors in regression models — get_cell_definitions","text":"","code":"if (FALSE) { # fit a linear mixed effects model using 'brms' # regressing voice pitch against gender and context and including random effects fit <- brms::brm(formula = pitch ~ gender * context + (1 | subject + sentence),                  data = politeness)  # check encoding scheme used in the model get_cell_definitions(fit) }"},{"path":"https://michael-franke.github.io/faintr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://michael-franke.github.io/faintr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://michael-franke.github.io/faintr/reference/politeness.html","id":null,"dir":"Reference","previous_headings":"","what":"Politeness data — politeness","title":"Politeness data — politeness","text":"data set preprocessed version data provided Winter Grawunder (2012). includes measurements voice pitch Korean speakers 2 x 2 factorial design, factors gender (male female) context (informal polite).","code":""},{"path":"https://michael-franke.github.io/faintr/reference/politeness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Politeness data — politeness","text":"","code":"politeness"},{"path":"https://michael-franke.github.io/faintr/reference/politeness.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Politeness data — politeness","text":"data frame 83 rows 5 variables: subject unique identifier participant. gender indicator participants gender (binary). sentence indicator sentence spoken participant. context main manipulation whether context polite informal setting. pitch measured voice pitch Hz (presumably: average sentence spoken).","code":""},{"path":"https://michael-franke.github.io/faintr/reference/politeness.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Politeness data — politeness","text":"Winter, B., Grawunder, S. (2012). phonetic profile Korean formality. Journal Phonetics, 40, 808-815.","code":""},{"path":"https://michael-franke.github.io/faintr/reference/politeness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Politeness data — politeness","text":"","code":"if (FALSE) { # fit a linear model using 'brms' # regress pitch as a function of dummy-coded factors 'gender' and 'context' fit <- brms::brm(pitch ~ gender + context, data = politeness)  # check encoding scheme used in the model get_cell_definitions(fit)  # get draws for male speakers in informal contexts extract_cell_draws(fit, gender == \"M\" & context == \"inf\")  # compare main effects of gender compare_groups(fit, gender == \"F\", gender == \"M\") }"},{"path":"https://michael-franke.github.io/faintr/reference/print.faintCompare.html","id":null,"dir":"Reference","previous_headings":"","what":"Print group comparison object — print.faintCompare","title":"Print group comparison object — print.faintCompare","text":"Print group comparison object","code":""},{"path":"https://michael-franke.github.io/faintr/reference/print.faintCompare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print group comparison object — print.faintCompare","text":"","code":"# S3 method for faintCompare print(x, ...)"},{"path":"https://michael-franke.github.io/faintr/reference/print.faintCompare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print group comparison object — print.faintCompare","text":"x object containing summary statistics group comparison. ... Ignored.","code":""}]
